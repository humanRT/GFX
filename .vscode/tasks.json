{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "compile-files",
            "type": "shell",
            "command": "/usr/bin/time",
            "args": [
                "-f",
                "Compile Time: %E",
                "/bin/bash",
                "-c",
                "mkdir -p build/objects && for file in src/*.cpp 3rdParty/meshoptimizer/src/*.cpp 3rdParty/stb/*.cpp; do ccache g++ -std=c++20 -Wall -Wextra -g -c $file -o build/objects/$(basename ${file%.cpp}.o) -Iinclude -I3rdParty/imgui -I3rdParty/stb -I3rdParty/meshoptimizer/src -I/usr/include/eigen3 -I/usr/include/vendor/assimp-install/include; done"
            ],
            "group": {
                "kind": "none"
            },
            "problemMatcher": ["$gcc"],
            "detail": "Compile all source files individually with caching and output .o files to build/objects"
        },
        {
            "label": "link-files",
            "type": "shell",
            "command": "/usr/bin/time",
            "args": [
                "-f",
                "Link Time: %E",
                "/bin/bash",
                "-c",
                "ccache g++ -o gfx build/objects/*.o -L3rdParty/imgui -Llib -L. -L/usr/include/vendor/assimp-install/lib -L/usr/lib/x86_64-linux-gnu -limgui -lglfw -lGL -lGLU -ldl -lX11 -lpthread -lXrandr -lXi -lGLEW -lfmt -lfcl -lccd /usr/include/vendor/assimp-install/lib/libassimp.a -lz -lminizip -DGLEW_STATIC"
            ],
            "problemMatcher": ["$gcc"],
            "detail": "Link all object files into the final executable"
        },
        {
            "label": "build-debug",
            "dependsOn": ["compile-files", "link-files"],
            "type": "shell",
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Build the project by compiling and linking all files"
        },
        {
            "label": "debug",
            "type": "shell",
            "command": "gdb",
            "args": ["./gfx"],
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "group": {
                "kind": "test",
                "isDefault": false
            },
            "detail": "Run the debugger on the executable"
        }
    ]
}
